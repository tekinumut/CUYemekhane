buildscript {
    apply from: '../dependency.gradle'
}
plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

def keystoreProperty = new Properties()
keystoreProperty.load(rootProject.file("app/keystore/keystore.properties").newDataInputStream())

android {
    namespace versions.appId
    compileSdk versions.compileSdk

    defaultConfig {
        applicationId versions.appId
        minSdk versions.minSdk
        targetSdk versions.compileSdk
        versionCode versions.versionCode
        versionName versions.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            keyAlias keystoreProperty['keyAlias']
            keyPassword keystoreProperty['keyPassword']
            storePassword keystoreProperty['storePassword']
            storeFile file('../app/keystore/CuYemekhane.jks')
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            resValue "string", "app_name", "Cu-dev"
            applicationIdSuffix '.debug'
        }
        release {
            minifyEnabled true
            resValue "string", "app_name", "CU Yemekhane"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {

    // Core
    implementation libraries.coreKtx
    implementation libraries.appCompat
    implementation libraries.material
    implementation libraries.splashScreen

    // View
    implementation libraries.constraintLayout
    implementation libraries.fragmentKtx
    implementation libraries.navigationFragmentKtx
    implementation libraries.navigationUiKtx
    implementation libraries.browser
    implementation libraries.swipeRefresh

    // Lifecycle Components
    implementation libraries.lifecycleViewModel
    implementation libraries.lifecycleRuntime

    // Dagger Hilt
    implementation libraries.daggerHilt
    kapt libraries.daggerHiltCompiler

    // Network
    implementation libraries.retrofit
    implementation libraries.retrofitScalars
    implementation libraries.okhttpLogging
    implementation libraries.jsoup
    implementation libraries.glide
    kapt libraries.glideCompiler

    //Test
    testImplementation libraries.junit
    androidTestImplementation libraries.testJunit
    androidTestImplementation libraries.espresso
}

// Allow references to generated code
kapt {
    correctErrorTypes true
}